syntax = "proto3";

package elixir_cqrs;

import "common.proto";

// 商品サービスの定義

// 商品モデル
message Product {
  string id = 1;
  string name = 2;
  string price = 3;  // Decimal を文字列で表現
  string currency = 4;
  string category_id = 5;
  string category_name = 6;
  Timestamp created_at = 7;
  Timestamp updated_at = 8;
}

// コマンド側のサービス定義
service ProductCommandService {
  rpc CreateProduct(CreateProductRequest) returns (CreateProductResponse);
  rpc UpdateProduct(UpdateProductRequest) returns (UpdateProductResponse);
  rpc ChangeProductPrice(ChangeProductPriceRequest) returns (ChangeProductPriceResponse);
  rpc DeleteProduct(DeleteProductRequest) returns (DeleteProductResponse);
}

// コマンド側のメッセージ定義
message CreateProductRequest {
  string name = 1;
  string price = 2;
  string category_id = 3;
  map<string, string> metadata = 4;
}

message CreateProductResponse {
  Result result = 1;
  string id = 2;
}

message UpdateProductRequest {
  string id = 1;
  optional string name = 2;
  optional string price = 3;
  optional string category_id = 4;
  map<string, string> metadata = 5;
}

message UpdateProductResponse {
  Result result = 1;
}

message ChangeProductPriceRequest {
  string id = 1;
  string new_price = 2;
  map<string, string> metadata = 3;
}

message ChangeProductPriceResponse {
  Result result = 1;
}

message DeleteProductRequest {
  string id = 1;
  map<string, string> metadata = 2;
}

message DeleteProductResponse {
  Result result = 1;
}

// クエリ側のサービス定義
service ProductQueryService {
  rpc GetProduct(GetProductRequest) returns (GetProductResponse);
  rpc ListProducts(ListProductsRequest) returns (ListProductsResponse);
  rpc SearchProducts(SearchProductsRequest) returns (SearchProductsResponse);
}

// クエリ側のメッセージ定義
message GetProductRequest {
  string id = 1;
}

message GetProductResponse {
  Product product = 1;
  Error error = 2;
}

message ListProductsRequest {
  optional string category_id = 1;
  optional string min_price = 2;
  optional string max_price = 3;
  Pagination pagination = 4;
  Sort sort = 5;
}

message ListProductsResponse {
  repeated Product products = 1;
  int32 total_count = 2;
  Error error = 3;
}

message SearchProductsRequest {
  string search_term = 1;
  optional string category_id = 2;
  Pagination pagination = 3;
}

message SearchProductsResponse {
  repeated Product products = 1;
  int32 total_count = 2;
  Error error = 3;
}