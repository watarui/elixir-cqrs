syntax = "proto3";

package proto;

option go_package = "/pb";

import "models.proto";
import "error.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

// カテゴリ検索用 Param 型
message CategoryParam {
  string id = 1; // カテゴリ番号
}

// 商品カテゴリ複数件を返す Result 型
message CategoriesResult {
  repeated Category categories = 1; // 商品カテゴリ複数
  Error error = 2; // エラー情報
  google.protobuf.Timestamp timestamp = 3; // タイムスタンプ
}

// 商品カテゴリ単一件を返す Result 型
message CategoryResult {
  oneof result {
    Category category = 1; // 商品カテゴリ
    Error error = 2; // エラー情報
  }
  google.protobuf.Timestamp timestamp = 3; // タイムスタンプ
}

// 商品検索用 Param 型
message ProductParam {
  string id = 1; // 商品番号
  string keyword = 2; // 検索キーワード
}

// 商品複数件を返す Result 型
message ProductsResult {
  repeated Product products = 1; // 商品複数
  Error error = 2; // エラー情報
  google.protobuf.Timestamp timestamp = 3; // タイムスタンプ
}

// 商品単一件を返す Result 型
message ProductResult {
  // 商品またはエラー情報を返す
  oneof result {
    Product product = 1; // 商品
    Error error = 2; // エラー情報
  }
  google.protobuf.Timestamp timestamp = 3; // タイムスタンプ
}

// 商品カテゴリ問い合わせサービス型
service CategoryQuery {
  // 全てのカテゴリを取得して返す
  rpc List(google.protobuf.Empty) returns (CategoriesResult);
  // 指定された ID のカテゴリを取得して返す
  rpc ById(CategoryParam) returns (CategoryResult);
}

// 商品問い合わせサービス型
service ProductQuery {
  // すべての商品を取得して返す(Server streaming RPC)
  rpc ListStream(google.protobuf.Empty) returns (stream Product);
  // 全ての商品の一覧を取得して返す
  rpc List(google.protobuf.Empty) returns (ProductsResult);
  // 指定された ID の商品を取得して返す
  rpc ById(ProductParam) returns (ProductResult);
  // 検索キーワードに一致する商品を取得して返す
  rpc ByKeyword(ProductParam) returns (ProductsResult);
}