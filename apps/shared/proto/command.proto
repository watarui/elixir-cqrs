syntax = "proto3";

package proto;

option go_package = "/pb";

import "models.proto";
import "error.proto";
import "google/protobuf/timestamp.proto";

enum CRUD {
  UNKNOWN = 0; // 不明
  INSERT = 1; // 追加
  UPDATE = 2; // 変更
  DELETE = 3; // 削除
}

// 商品カテゴリ更新 Param 型
message CategoryUpParam {
  CRUD crud = 1; // CRUD 操作
  string id = 2; // 商品カテゴリ番号
  string name = 3; // 商品カテゴリ名
}

// 商品更新 Param 型
message ProductUpParam {
  CRUD crud = 1; // CRUD 操作
  string id = 2; // 商品番号
  string name = 3; // 商品名
  double price = 4; // 商品価格
  string categoryId = 5; // 商品カテゴリ番号
}

// 商品カテゴリ更新 Result 型
message CategoryUpResult {
  Category category = 1; // 更新結果
  Error error = 2; // エラー情報
  google.protobuf.Timestamp timestamp = 3; // 更新日時
}

// 商品更新 Result 型
message ProductUpResult {
  Product product = 1; // 更新結果
  Error error = 2; // エラー情報
  google.protobuf.Timestamp timestamp = 3; // 更新日時
}

// 商品カテゴリ更新サービス型
service CategoryCommand {
  // 商品カテゴリを追加した結果を返す
  rpc Create(CategoryUpParam) returns (CategoryUpResult);
  // 商品カテゴリを更新した結果を返す
  rpc Update(CategoryUpParam) returns (CategoryUpResult);
  // 商品カテゴリを削除した結果を返す
  rpc Delete(CategoryUpParam) returns (CategoryUpResult);
}

// 商品更新サービス型
service ProductCommand {
  // 商品を追加した結果を返す
  rpc Create(ProductUpParam) returns (ProductUpResult);
  // 商品を更新した結果を返す
  rpc Update(ProductUpParam) returns (ProductUpResult);
  // 商品を削除した結果を返す
  rpc Delete(ProductUpParam) returns (ProductUpResult);
}

// 注文サガ開始パラメータ
message StartOrderSagaParam {
  string orderId = 1; // 注文ID
  string customerId = 2; // 顧客ID
  repeated OrderItem items = 3; // 注文アイテム
  double totalAmount = 4; // 合計金額
  ShippingAddress shippingAddress = 5; // 配送先住所
}

// 注文アイテム
message OrderItem {
  string productId = 1; // 商品ID
  string productName = 2; // 商品名
  int32 quantity = 3; // 数量
  double unitPrice = 4; // 単価
  double subtotal = 5; // 小計
}

// 配送先住所
message ShippingAddress {
  string street = 1; // 番地
  string city = 2; // 市区町村
  string postalCode = 3; // 郵便番号
}

// サガ開始結果
message StartSagaResult {
  string sagaId = 1; // サガID
  string status = 2; // ステータス
  Error error = 3; // エラー情報
  google.protobuf.Timestamp startedAt = 4; // 開始日時
}

// サガステータス取得パラメータ
message GetSagaStatusParam {
  string sagaId = 1; // サガID
}

// サガステータス結果
message SagaStatusResult {
  string sagaId = 1; // サガID
  string state = 2; // 状態
  repeated string completedSteps = 3; // 完了したステップ
  string currentStep = 4; // 現在のステップ
  string failureReason = 5; // 失敗理由
  google.protobuf.Timestamp startedAt = 6; // 開始日時
  google.protobuf.Timestamp completedAt = 7; // 完了日時
  Error error = 8; // エラー情報
}

// サガ管理サービス
service SagaCommand {
  // 注文サガを開始する
  rpc StartOrderSaga(StartOrderSagaParam) returns (StartSagaResult);
  // サガのステータスを取得する
  rpc GetSagaStatus(GetSagaStatusParam) returns (SagaStatusResult);
}